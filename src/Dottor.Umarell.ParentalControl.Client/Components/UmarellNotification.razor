@implements IAsyncDisposable
@inject IGeofenceService GeofenceService
@inject IToastService ToastService
@inject IMessageService MessageService
@inject IDialogService DialogService

<FluentToastProvider />
<FluentDialogProvider />
<FluentTooltipProvider />
@* <FluentMessageBarProvider /> *@

@code {
    protected override async Task OnInitializedAsync()
    {
        GeofenceService.OutOfZone += (e) =>
        {
            MessageService.ShowMessageBar(options =>
            {
                options.Intent = MessageIntent.Warning;
                options.Title = $"Umarell warning";
                options.Body = "L'umarell è uscito dall'area specificata.";
                options.AllowDismiss = true;
                options.Timestamp = DateTime.Now;
                options.Section = "MESSAGES_NOTIFICATION_CENTER";
            });
            // ToastService.ShowWarning("L'umarell è uscito dall'area specificata.");
            // DialogService.ShowWarning("L'umarell è uscito dall'area specificata.");
            return Task.CompletedTask;
        };
        await GeofenceService.StartMonitoringAsync();
    }

    public async ValueTask DisposeAsync()
    {
        if (GeofenceService is not null)
            await GeofenceService.DisposeAsync();
    }
}
